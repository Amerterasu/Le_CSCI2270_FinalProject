// adds up a the values along the path and see if any paths equals the given sum
bool hasPathSum(TreeNode *node, int sum){
    sum-= node->key;
    if(sum == 0)
        return true;
    if(node->left != NULL){
        if(hasPathSum(node->left, sum) )
            return true;
    }
    if(node->right != NULL){
        if(hasPathSum(node->right, sum))
            return true;
    }
    return false;
}

bool isBST(TreeNode* node)
{
    static TreeNode *prev = NULL;
     if(node != NULL){
        if (!isBST(node->left))
          return false;
 
        if (prev != NULL && node->key <= prev->key)
          return false;
 
        prev = node;
 
        return isBST(node->right);
     }
 
    return true;
}

bool sameTree(TreeNode *node1, TreeNode *node2){
    if(node1 == NULL && node2 == NULL){
        return true;
    }else{
        if(node1 == NULL && node2 != NULL){
            return false;
        }
        if(node1 != NULL && node2 == NULL){
            return false;
        }
        if(node1-> key != node2->key){
            return false;
        }
        if(!sameTree(node1->left, node2->left)){
            return false;
        }
        if(!sameTree(node1->right, node2->right)){
            return false;
        }
    }
    return true;
}